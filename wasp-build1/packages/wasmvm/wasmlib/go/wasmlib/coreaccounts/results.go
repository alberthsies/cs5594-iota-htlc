// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreaccounts

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type MapAgentIDToImmutableBytes struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToImmutableBytes) GetBytes(key wasmtypes.ScAgentID) wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type ImmutableAccountsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableAccountsResults) Agents() MapAgentIDToImmutableBytes {
	//nolint:gosimple
	return MapAgentIDToImmutableBytes{proxy: s.proxy}
}

type MapAgentIDToMutableBytes struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToMutableBytes) Clear() {
	m.proxy.ClearMap()
}

func (m MapAgentIDToMutableBytes) GetBytes(key wasmtypes.ScAgentID) wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MutableAccountsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableAccountsResults) Agents() MapAgentIDToMutableBytes {
	//nolint:gosimple
	return MapAgentIDToMutableBytes{proxy: s.proxy}
}

type MapColorToImmutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToImmutableInt64) GetInt64(key wasmtypes.ScColor) wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(m.proxy.Key(wasmtypes.ColorToBytes(key)))
}

type ImmutableBalanceResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableBalanceResults) Balances() MapColorToImmutableInt64 {
	//nolint:gosimple
	return MapColorToImmutableInt64{proxy: s.proxy}
}

type MapColorToMutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToMutableInt64) Clear() {
	m.proxy.ClearMap()
}

func (m MapColorToMutableInt64) GetInt64(key wasmtypes.ScColor) wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(m.proxy.Key(wasmtypes.ColorToBytes(key)))
}

type MutableBalanceResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableBalanceResults) Balances() MapColorToMutableInt64 {
	//nolint:gosimple
	return MapColorToMutableInt64{proxy: s.proxy}
}

type ImmutableGetAccountNonceResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetAccountNonceResults) AccountNonce() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ResultAccountNonce))
}

type MutableGetAccountNonceResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetAccountNonceResults) AccountNonce() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ResultAccountNonce))
}

type ImmutableTotalAssetsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableTotalAssetsResults) Balances() MapColorToImmutableInt64 {
	//nolint:gosimple
	return MapColorToImmutableInt64{proxy: s.proxy}
}

type MutableTotalAssetsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableTotalAssetsResults) Balances() MapColorToMutableInt64 {
	//nolint:gosimple
	return MapColorToMutableInt64{proxy: s.proxy}
}
