// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_mut)]

use wasmlib::*;

pub struct FairRouletteEvents {
}

impl FairRouletteEvents {

	pub fn bet(&self, address: &ScAddress, amount: u64, number: u16) {
		let mut evt = EventEncoder::new("fairroulette.bet");
		evt.encode(&address_to_string(&address));
		evt.encode(&uint64_to_string(amount));
		evt.encode(&uint16_to_string(number));
		evt.emit();
	}

	pub fn payout(&self, address: &ScAddress, amount: u64) {
		let mut evt = EventEncoder::new("fairroulette.payout");
		evt.encode(&address_to_string(&address));
		evt.encode(&uint64_to_string(amount));
		evt.emit();
	}

	pub fn round(&self, number: u32) {
		let mut evt = EventEncoder::new("fairroulette.round");
		evt.encode(&uint32_to_string(number));
		evt.emit();
	}

	pub fn start(&self) {
		let mut evt = EventEncoder::new("fairroulette.start");
		evt.emit();
	}

	pub fn stop(&self) {
		let mut evt = EventEncoder::new("fairroulette.stop");
		evt.emit();
	}

	pub fn winner(&self, number: u16) {
		let mut evt = EventEncoder::new("fairroulette.winner");
		evt.encode(&uint16_to_string(number));
		evt.emit();
	}
}
