// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type MapColorToImmutableAuction struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToImmutableAuction) GetAuction(key wasmtypes.ScColor) ImmutableAuction {
	return ImmutableAuction{proxy: m.proxy.Key(wasmtypes.ColorToBytes(key))}
}

type MapColorToImmutableBidderList struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToImmutableBidderList) GetBidderList(key wasmtypes.ScColor) ImmutableBidderList {
	return ImmutableBidderList{proxy: m.proxy.Key(wasmtypes.ColorToBytes(key))}
}

type MapColorToImmutableBids struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToImmutableBids) GetBids(key wasmtypes.ScColor) ImmutableBids {
	return ImmutableBids{proxy: m.proxy.Key(wasmtypes.ColorToBytes(key))}
}

type ImmutableFairAuctionState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFairAuctionState) Auctions() MapColorToImmutableAuction {
	return MapColorToImmutableAuction{proxy: s.proxy.Root(StateAuctions)}
}

func (s ImmutableFairAuctionState) BidderList() MapColorToImmutableBidderList {
	return MapColorToImmutableBidderList{proxy: s.proxy.Root(StateBidderList)}
}

func (s ImmutableFairAuctionState) Bids() MapColorToImmutableBids {
	return MapColorToImmutableBids{proxy: s.proxy.Root(StateBids)}
}

func (s ImmutableFairAuctionState) OwnerMargin() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(StateOwnerMargin))
}

type MapColorToMutableAuction struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToMutableAuction) Clear() {
	m.proxy.ClearMap()
}

func (m MapColorToMutableAuction) GetAuction(key wasmtypes.ScColor) MutableAuction {
	return MutableAuction{proxy: m.proxy.Key(wasmtypes.ColorToBytes(key))}
}

type MapColorToMutableBidderList struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToMutableBidderList) Clear() {
	m.proxy.ClearMap()
}

func (m MapColorToMutableBidderList) GetBidderList(key wasmtypes.ScColor) MutableBidderList {
	return MutableBidderList{proxy: m.proxy.Key(wasmtypes.ColorToBytes(key))}
}

type MapColorToMutableBids struct {
	proxy wasmtypes.Proxy
}

func (m MapColorToMutableBids) Clear() {
	m.proxy.ClearMap()
}

func (m MapColorToMutableBids) GetBids(key wasmtypes.ScColor) MutableBids {
	return MutableBids{proxy: m.proxy.Key(wasmtypes.ColorToBytes(key))}
}

type MutableFairAuctionState struct {
	proxy wasmtypes.Proxy
}

func (s MutableFairAuctionState) AsImmutable() ImmutableFairAuctionState {
	return ImmutableFairAuctionState(s)
}

func (s MutableFairAuctionState) Auctions() MapColorToMutableAuction {
	return MapColorToMutableAuction{proxy: s.proxy.Root(StateAuctions)}
}

func (s MutableFairAuctionState) BidderList() MapColorToMutableBidderList {
	return MapColorToMutableBidderList{proxy: s.proxy.Root(StateBidderList)}
}

func (s MutableFairAuctionState) Bids() MapColorToMutableBids {
	return MapColorToMutableBids{proxy: s.proxy.Root(StateBids)}
}

func (s MutableFairAuctionState) OwnerMargin() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(StateOwnerMargin))
}
